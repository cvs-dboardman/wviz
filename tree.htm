
<!DOCTYPE html>
<html lang='en' class=''>
<head>

<style class="cp-pen-styles">

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 4.5px;
}

#viz {
  margin-left: 20%;
}

svg{
	border: 1px solid black;
}

text{
	font-family: sans-serif;
}

</style>
</head>
<body>
<h1>Adjacent and switching jobs for Teachers</h1>
<div id="viz"></div>
<script src='https://d3js.org/d3.v3.min.js'></script>
<script >//JSON object with the data
var treeData =
{ "name": "Teacher", "info": "tst", "children": [
     { "name": "Senior Teacher" },
     { "name": "Assistant Teacher" },
     { "name": "Principal" },
     { "name": "", "children": [
          { "name": "Graphic Designer" },
          { "name": "Talent Manager" }] }] 

};



// Create a svg canvas

var width=800;
var height=600;

var vis = d3.select("#viz").append("svg:svg").
attr("width", width).
attr("height", height).
append("svg:g").
attr("transform", "translate(80, 0)"); // shift everything to the right

var tree = d3.layout.tree().
size([400, 300]);

var diagonal = d3.svg.diagonal()
.projection(function (d) {return [d.y, d.x];});

var nodes = tree.nodes(treeData);
var links = tree.links(nodes);

console.log(treeData);
console.log(nodes);
console.log(links);

var link = vis.selectAll("pathlink").
data(links).
enter().append("svg:path").
attr("class", "link").
attr("d", diagonal);

var node = vis.selectAll("g.node").
data(nodes).
enter().append("svg:g").
attr("transform", function (d) {return "translate(" + d.y + "," + d.x + ")";});

// Add the dot at every node
node.append("svg:circle").
attr("r", 3.5);

// place the name atribute left or right depending if children
node.append("svg:text").
attr("dx", function (d) {return d.children ? -8 : 8;}).
attr("dy", 3).
attr("text-anchor", function (d) {return d.children ? "end" : "start";}).
text(function (d) {return d.name;});

</script>
</body>
</html>