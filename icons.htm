
<!DOCTYPE html><html lang='en' class=''>
<head>


<style>
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

pre {
  margin: 20px 0;
  padding: 20px;
  background: #fafafa;
}

img{
    width: 120px; 
    height: 120px;
    background-image:url('img/pattern2.svg');
    border:8px solid #4A90E2;
}

.round { border-radius: 50%; }


* {
  box-sizing: border-box;
}


</style>
</head>
<body>
<h1>Occupations icons</h1>




<div>
    <img avatar="Assistant Teacher"> Assistant Teacher
</div>
<br>
<div>
    <img class="round" avatar="Principal Assistant Teacher"> Principal Assistant Teacher
</div>
<br>
<div>
    <img avatar="Truck Driver"> Truck Driver
</div>
<br>
<div>
    <img class="round" avatar="Android Developer"> Android Developer
</div>
<br>


<script >/*
     * LetterAvatar
     * 
     * Artur Heinze
     * Create Letter avatar based on Initials
     * based on https://gist.github.com/leecrossley/6027780
     */
(function (w, d) {


    function LetterAvatar(name, size) {

        name = name || '';
        size = size || 120;

        var colours = [
        "#1abc9c", "#2ecc71", "#3498db", "#9b59b6", "#34495e", "#16a085", "#27ae60", "#2980b9", "#8e44ad", "#2c3e50",
        "#f1c40f", "#e67e22", "#e74c3c", "#ecf0f1", "#95a5a6", "#f39c12", "#d35400", "#c0392b", "#bdc3c7", "#7f8c8d"],


        nameSplit = String(name).toUpperCase().split(' '),
        initials,charIndex,colourIndex,canvas,context,dataURI;


        if (nameSplit.length == 1) {
            initials = nameSplit[0] ? nameSplit[0].charAt(0) : '?';
        } else {
            initials = nameSplit[0].charAt(0) + nameSplit[1].charAt(0);
        }

        if (w.devicePixelRatio) {
            size = size * w.devicePixelRatio;
        }


        charIndex = (initials == '?' ? 72 : initials.charCodeAt(0)) - 64;
        colourIndex = charIndex % 20;
        canvas = d.createElement('canvas');
        canvas.width = size;
        canvas.height = size;
        context = canvas.getContext("2d");



        //context.fillStyle = colours[colourIndex - 1];
        //context.fillRect(0, 0, canvas.width, canvas.height);


        context.font = Math.round(canvas.width / 2.5) + "px Helvetica-Bold";
        context.textAlign = "center";
        context.fillStyle = "#fff";
        context.fillText(initials, size / 2, size / 1.5);

        dataURI = canvas.toDataURL();
        canvas = null;

        return dataURI;
    }

    LetterAvatar.transform = function () {

        Array.prototype.forEach.call(d.querySelectorAll('img[avatar]'), function (img, name) {
            name = img.getAttribute('avatar');
            img.src = LetterAvatar(name, img.getAttribute('width'));
            img.removeAttribute('avatar');
            img.setAttribute('alt', name);
        });
    };


    // AMD support
    if (typeof define === 'function' && define.amd) {

        define(function () {return LetterAvatar;});

        // CommonJS and Node.js module support.
    } else if (typeof exports !== 'undefined') {

        // Support Node.js specific `module.exports` (which can be a function)
        if (typeof module != 'undefined' && module.exports) {
            exports = module.exports = LetterAvatar;
        }

        // But always support CommonJS module 1.1.1 spec (`exports` cannot be a function)
        exports.LetterAvatar = LetterAvatar;

    } else {

        window.LetterAvatar = LetterAvatar;

        d.addEventListener('DOMContentLoaded', function (event) {
            LetterAvatar.transform();
        });
    }

})(window, document);

</script>
</body>
</html>